#pragma checksum "D:\CODE\C#\demo001\TodoList\TodoList\Views\Todo\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "685c44b363fde5408a9270d4f3b49a564bd7c214"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Todo_Index), @"mvc.1.0.view", @"/Views/Todo/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\CODE\C#\demo001\TodoList\TodoList\Views\_ViewImports.cshtml"
using TodoList;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\CODE\C#\demo001\TodoList\TodoList\Views\_ViewImports.cshtml"
using TodoList.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "D:\CODE\C#\demo001\TodoList\TodoList\Views\Todo\Index.cshtml"
using Humanizer;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"685c44b363fde5408a9270d4f3b49a564bd7c214", @"/Views/Todo/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0b81968e910e1c4b6c646faaf9ce216adba1ee08", @"/Views/_ViewImports.cshtml")]
    public class Views_Todo_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<TodoViewModel>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("<!--在这里设置了Model-->\r\n<!--下方的语句类似于提前将网页的名称定义好,用于显示-->\r\n<!--ViewData将网页需要的内容进行分门别类的保存以调用-->\r\n<!--在Nuget内部添加包的后缀名需要为.core-->\r\n");
#nullable restore
#line 7 "D:\CODE\C#\demo001\TodoList\TodoList\Views\Todo\Index.cshtml"
  
    ViewData["Title"] = "Manage your todo list";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<div class=\"panel panel-default todo-panel\">\r\n    <div class=\"panel-heading\">\r\n        ");
#nullable restore
#line 13 "D:\CODE\C#\demo001\TodoList\TodoList\Views\Todo\Index.cshtml"
   Write(ViewData["Title"]);

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n    </div>\r\n    <table class=\"table table-hover\">\r\n        <thead>\r\n        <tr>\r\n            <td>&#x2714;</td>\r\n            <td>Item</td>\r\n            <td>Due</td>\r\n        </tr>\r\n        </thead>\r\n");
#nullable restore
#line 23 "D:\CODE\C#\demo001\TodoList\TodoList\Views\Todo\Index.cshtml"
         foreach (var item in Model.Items) {

#line default
#line hidden
#nullable disable
            WriteLiteral("            <tr>\r\n                <td>\r\n                    <input type=\"checkbox\" class=\"done-checkbox\">\r\n                </td>\r\n                <td>");
#nullable restore
#line 28 "D:\CODE\C#\demo001\TodoList\TodoList\Views\Todo\Index.cshtml"
               Write(item.Title);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                <td>");
#nullable restore
#line 29 "D:\CODE\C#\demo001\TodoList\TodoList\Views\Todo\Index.cshtml"
               Write(item.DueAt.Humanize());

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n            </tr>\r\n");
#nullable restore
#line 31 "D:\CODE\C#\demo001\TodoList\TodoList\Views\Todo\Index.cshtml"
        }

#line default
#line hidden
#nullable disable
            WriteLiteral("    </table>\r\n    <div class=\"panel-footer add-item-form\">\r\n        ");
#nullable restore
#line 34 "D:\CODE\C#\demo001\TodoList\TodoList\Views\Todo\Index.cshtml"
   Write(await Html.PartialAsync("AddItemPartial",new TodoItem()));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
        <!--参考资料:https://docs.microsoft.com/zh-cn/aspnet/core/mvc/views/partial?view=aspnetcore-5.0
        这是一个异步的部分视图,await可能是对于异步调用的一种标识符
        大概是从这里面直接获取字符串,然后提交给model用于创建模型,但是只凭一个属性如何创建模型,这个new 的模型由该如何加工?
        答:这是一个被称为""模型绑定""的处理过程,asp.net core会试图自动将输入的表单内容与对应的模型绑定起来,自动输入对应字段的内容,
        即,将这个部分视图里面form的内容传递到那个新创建的TodoItem中.在AddItemPartial视图中有更详细的描述.
        -->
    </div>
</div>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<TodoViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
